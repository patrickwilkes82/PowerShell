###VARIABLES###

#Export File Path
$filepath = 'C:\exports\'
#Export File Name
$filename = 'Active_User_List'

#Current date to add to filename
$date = Get-Date
#Date Format
$date = $date.ToString('MM-dd-yy')

#SMTP Settings
$PSEmailServer = 'smtp.office365.com'
$emailfrom = 'Onepath Admin <admin.onepath@g100companies.com>'
$emailto = 'Patrick Wilkes <pwilkes@1path.com>'
$emailbody = 'This message was autogenerated via PowerShell'
$emailuser = 'admin.onepath@g100companies.com'
$emailpword = ConvertTo-SecureString -String 'Uzh2!2Bh!@R8T' -AsPlainText -Force
$emailcredential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $emailuser, $emailpword

###__________________________________________________________###

###PRE-REQs###

Import-Module ActiveDirectory

###__________________________________________________________###

###EXECUTION###

function Show-Menu
{
    param (
        [string]$Title = 'Active User Report'
    )
    Clear-Host
    Write-Host "================ $Title ================"
    
    Write-Host "1: Press '1' to get report for G100C"
    Write-Host "2: Press '2' to get report for G100N"
    Write-Host "3: Press '3' to get report for TMG"
    Write-Host "4: Press '4' to get report for SSA"
    Write-Host "5: Press '5' to get report for HLG"
    Write-Host "6: Press '6' to get report for Mentore"
    Write-Host "A: Press 'A' to get report for All Companies"
    Write-Host "Q: Press 'Q' to quit."
}
do
 {
     Show-Menu
     $selection = Read-Host "Please make a selection"
     switch ($selection)
     {
         '1' {
             $company = 'G100C'
             $ou = 'OU=G100 Companies,DC=sigma,dc=com'
             $filepath = 'c:\exports\'
             $export = $filepath, $company, '_', $filename, '_', $date, '.csv' -join ""
             $enabled = {$_.Enabled -like 'true'}
             $ignoresub = {$_.DistinguishedName -notmatch 'ICs|Contractors|Shadow|Intern|Service|Disabled'}
             $emailsubject = $company, ' ', 'Active User Report' -join ""

             Get-ADUser -Filter * -SearchBase $ou -Properties Manager,Enabled |
             Where-Object {($_.DistinguishedName -notmatch 'Shadow|Service|Disabled') -and $_.Enabled -like "True"} |
             Select Name, SamAccountName, Enabled |
             Export-csv $export -NoTypeInformation
             Send-MailMessage -from $emailfrom -to $emailto -Subject $emailsubject -Body $emailbody -attachments $export -smtpserver $PSEmailServer -credential $emailcredential -usessl
         } '2' {
             $company = 'G100N'
             $ou = 'OU=G100 Employees,DC=sigma,dc=com'
             $filepath = 'c:\exports\'
             $export = $filepath, $company, '_', $filename, '_', $date, '.csv' -join ""
             $enabled = {$_.Enabled -like 'true'}
             $ignoresub = {$_.DistinguishedName -notmatch 'ICs|Contractors|Shadow|Intern|Service|Disabled'}
             $emailsubject = $company, ' ', 'Active User Report' -join ""

             Get-ADUser -Filter * -SearchBase $ou -Properties Manager,Enabled |
             Where-Object {($_.DistinguishedName -notmatch 'Shadow|Service|Disabled') -and $_.Enabled -like "True"} |
             Select Name, SamAccountName, Enabled |
             Export-csv $export -NoTypeInformation
             Send-MailMessage -from $emailfrom -to $emailto -Subject $emailsubject -Body $emailbody -attachments $export -smtpserver $PSEmailServer -credential $emailcredential -usessl
         } '3' {
             $company = 'TMG'
             $ou = 'OU=The Miles Group,DC=sigma,dc=com'
             $filepath = 'c:\exports\'
             $export = $filepath, $company, '_', $filename, '_', $date, '.csv' -join ""
             $enabled = {$_.Enabled -like 'true'}
             $ignoresub = {$_.DistinguishedName -notmatch 'ICs|Contractors|Shadow|Intern|Service|Disabled'}
             $emailsubject = $company, ' ', 'Active User Report' -join ""

             Get-ADUser -Filter * -SearchBase $ou -Properties Manager,Enabled |
             Where-Object {($_.DistinguishedName -notmatch 'Shadow|Service|Disabled') -and $_.Enabled -like "True"} |
             Select Name, SamAccountName, Enabled |
             Export-csv $export -NoTypeInformation
             Send-MailMessage -from $emailfrom -to $emailto -Subject $emailsubject -Body $emailbody -attachments $export -smtpserver $PSEmailServer -credential $emailcredential -usessl
         } '4' {
             $company = 'SSA'
             $ou = 'OU=Six Sigma Employees,DC=sigma,dc=com'
             $filepath = 'c:\exports\'
             $export = $filepath, $company, '_', $filename, '_', $date, '.csv' -join ""
             $enabled = {$_.Enabled -like 'true'}
             $ignoresub = {$_.DistinguishedName -notmatch 'ICs|Contractors|Shadow|Intern|Service|Disabled'}
             $emailsubject = $company, ' ', 'Active User Report' -join ""

             Get-ADUser -Filter * -SearchBase $ou -Properties Manager,Enabled |
             Where-Object {($_.DistinguishedName -notmatch 'Shadow|Service|Disabled') -and $_.Enabled -like "True"} |
             Select Name, SamAccountName, Enabled |
             Export-csv $export -NoTypeInformation
             Send-MailMessage -from $emailfrom -to $emailto -Subject $emailsubject -Body $emailbody -attachments $export -smtpserver $PSEmailServer -credential $emailcredential -usessl
         } '5' { 
             $company = 'HLG'
             $ou = 'OU=Highlantern Group Employees,DC=sigma,dc=com'
             $filepath = 'c:\exports\'
             $export = $filepath, $company, '_', $filename, '_', $date, '.csv' -join ""
             $enabled = {$_.Enabled -like 'true'}
             $ignoresub = {$_.DistinguishedName -notmatch 'ICs|Contractors|Shadow|Intern|Service|Disabled'}
             $emailsubject = $company, ' ', 'Active User Report' -join ""

             Get-ADUser -Filter * -SearchBase $ou -Properties Manager,Enabled |
             Where-Object {($_.DistinguishedName -notmatch 'Shadow|Service|Disabled') -and $_.Enabled -like "True"} |
             Select Name, SamAccountName, Enabled, DistinguishedName |
             Export-csv $export -NoTypeInformation
             Send-MailMessage -from $emailfrom -to $emailto -Subject $emailsubject -Body $emailbody -attachments $export -smtpserver $PSEmailServer -credential $emailcredential -usessl
         } '6' {
             $company = 'Mentore'
             $ou = 'OU=Mentore,DC=sigma,DC=com'
             $filepath = 'c:\exports\'
             $export = $filepath, $company, '_', $filename, '_', $date, '.csv' -join ""
             $enabled = {$_.Enabled -like 'true'}
             $ignoresub = {$_.DistinguishedName -notmatch 'ICs|Contractors|Shadow|Intern|Service|Disabled'}
             $emailsubject = $company, ' ', 'Active User Report' -join ""

             Get-ADUser -Filter * -SearchBase $ou -Properties Manager,Enabled |
             #Where-Object {($_.DistinguishedName -notmatch 'Shadow|Service|Disabled') -and $_.Enabled -like "True"} |
             Select Name, SamAccountName, Enabled |
             Export-csv $export -NoTypeInformation
             Send-MailMessage -from $emailfrom -to $emailto -Subject $emailsubject -Body $emailbody -attachments $export -smtpserver $PSEmailServer -credential $emailcredential -usessl
         } 'A' {
             $company = 'All Companies'
             $ous = 'OU=G100 Companies,DC=sigma,dc=com','OU=G100 Employees,DC=sigma,dc=com','OU=The Miles Group,DC=sigma,dc=com','OU=Six Sigma Employees,DC=sigma,dc=com','OU=Highlantern Group Employees,DC=sigma,dc=com','OU=Mentore,DC=sigma,DC=com'
             $filepath = 'c:\exports\'
             $export = $filepath, $company, '_', $filename, '_', $date, '.csv' -join ""
             $enabled = {$_.Enabled -like 'true'}
             $ignoresub = {$_.DistinguishedName -notmatch 'Shadow|Service|Disabled'}
             $emailsubject = $company, ' ', 'Active User Report' -join ""

             $ous | ForEach {Get-ADUser -Filter * -SearchBase $_ -Properties Company,EmailAddress,Enabled} |
             Where-Object {($_.DistinguishedName -notmatch 'Shadow|Service|Disabled') -and $_.Enabled -like "True"} |
             Select Name, SamAccountName, EmailAddress, Company, Enabled |
             Export-csv $export -NoTypeInformation
             Send-MailMessage -from $emailfrom -to $emailto -Subject $emailsubject -Body $emailbody -attachments $export -smtpserver $PSEmailServer -credential $emailcredential -usessl
         }
     }
     pause
 }
 until ($selection -eq 'q')